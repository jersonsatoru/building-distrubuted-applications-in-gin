consumes:
- application/json
definitions:
  ObjectID:
    items:
      format: uint8
      type: integer
    title: ObjectID is the BSON ObjectID type.
    type: array
    x-go-package: go.mongodb.org/mongo-driver/bson/primitive
  recipe:
    properties:
      id:
        $ref: '#/definitions/ObjectID'
      ingredients:
        items:
          type: string
        type: array
        x-go-name: Ingredients
      instructions:
        items:
          type: string
        type: array
        x-go-name: Instructions
      name:
        type: string
        x-go-name: Name
      publishedAt:
        format: date-time
        type: string
        x-go-name: PublishedAt
      tags:
        items:
          type: string
        type: array
        x-go-name: Tags
    type: object
    x-go-name: Recipe
    x-go-package: github.com/jersonsatoru/building-distributed-applications-in-gin/internal/models
  user:
    properties:
      password:
        description: User's login
        type: string
        x-go-name: Password
      username:
        description: User's password
        type: string
        x-go-name: Username
    required:
    - username
    - password
    type: object
    x-go-name: User
    x-go-package: github.com/jersonsatoru/building-distributed-applications-in-gin/internal/models
host: http://api.recipes.io:44004
info:
  contact:
    email: jersonsatoru@yahoo.com.br
  description: |-
    Recipes API
    This is a simple recipes API. You can find out more about the API at  google, thanks
  version: 1.0.0
paths:
  /recipes:
    get:
      description: Returns list of recipes
      operationId: listRecipe
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
      tags:
      - recipe
    post:
      description: Create a new recipe
      operationId: createRecipe
      produces:
      - apllication/json
      responses:
        "201":
          description: Successful operation
      tags:
      - recipe
    put:
      description: Update a recipe
      operationId: updateRecipe
      parameters:
      - description: ID of the recipe
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
      tags:
      - recipe
  /recipes/{id}:
    delete:
      description: Delete a recipe by its ID
      operationId: deleteRecipe
      parameters:
      - description: ID of the recipe
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Successful operation
      tags:
      - recipe
  /recipes/search:
    get:
      description: Search for recipes filtered by tag
      operationId: searchRecipe
      parameters:
      - description: Recipe's tag that you are looking for
        in: query
        name: tag
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
      tags:
      - recipe
  /refresh:
    post:
      description: Refresh JWT Token
      operationId: refreshToken
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
        "401":
          description: Invalid credentials
      tags:
      - token
  /refresh_token:
    post:
      description: Refresh JWT Token
      operationId: refreshToken
      produces:
      - application/json
      responses:
        "201":
          description: Successful operation
      tags:
      - token
  /signout:
    post:
      description: Log out and clear the session client
      operationId: signout
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
      tags:
      - token
produces:
- application/json
schemes:
- https
securityDefinitions:
  api_key:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
